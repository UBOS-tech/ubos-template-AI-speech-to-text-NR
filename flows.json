[
    {
        "id": "0982ff679a3f7ceb",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d0f0fa31e9af4d8f",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 1",
        "func": "msg.oldpayload = msg.payload;\nmsg.url = `https://api.openai.com/v1/audio/transcriptions`;\nmsg.method = \"POST\";\nmsg.token = global.get('token')\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Authorization\": msg.token,\n    \"Connection\": \"Keep-Alive\",\n    \"Transfer-Encoding\": \"chunked\"\n}\nmsg.buffer = msg.req.files[0].buffer\nmsg.filename = msg.req.files[0].originalname\nmsg.payload = {\n    // file: msg.req.files[0].buffer,\n    model: 'whisper-1',\n    \"language\": msg.payload.lan,\n    'temperature': 0.2,\n        \"file\": {\n        \"value\": msg.req.files[0].buffer,\n        \"options\": {\n            \"filename\": msg.req.files[0].originalname\n        }\n    },\n    \n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "9b3a7ea6d7b465b5"
            ]
        ]
    },
    {
        "id": "e147fe4763407457",
        "type": "http in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "/uploadVideo",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "d0f0fa31e9af4d8f"
            ]
        ]
    },
    {
        "id": "9b3a7ea6d7b465b5",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 220,
        "wires": [
            [
                "dbb0bfc934a59ccb"
            ]
        ]
    },
    {
        "id": "a54708c36aa14863",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 14",
        "func": "msg.old = msg.payload\nmsg.payload = msg.payload.url\nmsg.path = \"/data/video/\"\nmsg.audioonly = \"true\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 120,
        "wires": [
            [
                "ccdf5fd4ed9e6ed3"
            ]
        ]
    },
    {
        "id": "98aad56239f8cbee",
        "type": "file in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 880,
        "y": 120,
        "wires": [
            [
                "c8f4abdd67ce6538"
            ]
        ]
    },
    {
        "id": "c8f4abdd67ce6538",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 15",
        "func": "msg.oldpayload = msg.payload;\nmsg.url = `https://api.openai.com/v1/audio/transcriptions`;\nmsg.method = \"POST\";\nmsg.token = global.get('token')\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Authorization\": msg.token,\n    \"Connection\": \"Keep-Alive\",\n    \"Transfer-Encoding\": \"chunked\"\n}\nmsg.buffer = msg.payload\nmsg.payload = {\n    model: 'whisper-1',\n    \"response-format\": \"text\",\n    'temperature': 0.2,\n    \"language\": msg.payload.lan,\n        \"file\": {\n        \"value\": msg.payload,\n        \"options\": {\n            \"filename\": msg.filename\n        }\n    },\n    \n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "1e636f447ae5e7fb"
            ]
        ]
    },
    {
        "id": "1e636f447ae5e7fb",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 120,
        "wires": [
            [
                "62b17cec65e9d571"
            ]
        ]
    },
    {
        "id": "7bcb301e0aa4eb8e",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 16",
        "func": "msg.filename = msg.file\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 120,
        "wires": [
            [
                "98aad56239f8cbee"
            ]
        ]
    },
    {
        "id": "c565c5f228732452",
        "type": "http in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "/urlVideo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "a54708c36aa14863"
            ]
        ]
    },
    {
        "id": "e3314196fa80a884",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1610,
        "y": 160,
        "wires": []
    },
    {
        "id": "4d149834151dd06b",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 17",
        "func": "msg.oldpayload = msg.payload;\nmsg.url = `https://api.openai.com/v1/completions`;\nmsg.method = \"POST\";\nmsg.token = global.get('token')\n\nmsg.headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": msg.token,\n}\n\nmsg.prompt = msg.payload.prompt + \" Data: \" + msg.payload.data\n\nmsg.payload = {\n    \"model\": \"text-davinci-003\",\n    'temperature': 0.5,\n    \"prompt\": msg.prompt,\n    \"max_tokens\":1000,\n    \"top_p\": 1,\n    \"n\": 1\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "45e3a88b8bd2d1a8"
            ]
        ]
    },
    {
        "id": "65ea352f05727c8b",
        "type": "http in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "/completions",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "4d149834151dd06b"
            ]
        ]
    },
    {
        "id": "45e3a88b8bd2d1a8",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 500,
        "y": 320,
        "wires": [
            [
                "fa9c0e8472b0b04e"
            ]
        ]
    },
    {
        "id": "81868afb10ed64c5",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 320,
        "wires": []
    },
    {
        "id": "dbb0bfc934a59ccb",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 19",
        "func": "if(msg.statusCode === 200){\n    msg.payload = msg.payload.text\n    }\n    else{\n     msg.payload = msg.payload.error.message\n     msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            [
                "2cc5fd124313ecfe"
            ]
        ]
    },
    {
        "id": "5590ca4427f4bf5d",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 24",
        "func": "msg.oldpayload = msg.payload;\nmsg.url = `https://api.openai.com/v1/audio/translations`;\nmsg.method = \"POST\";\nmsg.token = global.get('token')\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Authorization\": msg.token,\n    \"Connection\": \"Keep-Alive\",\n    \"Transfer-Encoding\": \"chunked\"\n}\n\nmsg.payload = {\n    // file: msg.req.files[0].buffer,\n    model: 'whisper-1',\n    // \"language\": \"uk\",\n    'temperature': 0.2,\n        \"file\": {\n        \"value\": msg.req.files[0].buffer,\n        \"options\": {\n            \"filename\": msg.req.files[0].originalname\n        }\n    },\n    \n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 400,
        "wires": [
            [
                "a5348fa03d3bb4ba"
            ]
        ]
    },
    {
        "id": "080a5cd3febd8f4f",
        "type": "http in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "/translateVideo",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 130,
        "y": 400,
        "wires": [
            [
                "5590ca4427f4bf5d"
            ]
        ]
    },
    {
        "id": "a5348fa03d3bb4ba",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 500,
        "y": 400,
        "wires": [
            [
                "e1f4fc91384d3a67"
            ]
        ]
    },
    {
        "id": "d3d4232d60e3dc8d",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 840,
        "y": 400,
        "wires": []
    },
    {
        "id": "e1f4fc91384d3a67",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 25",
        "func": "if(msg.statusCode === 200){\n    msg.payload = msg.payload.text\n    }\n    else{\n        msg.payload = msg.payload\n        msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 400,
        "wires": [
            [
                "d3d4232d60e3dc8d"
            ]
        ]
    },
    {
        "id": "ccdf5fd4ed9e6ed3",
        "type": "youtube-ytdl",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "payload",
        "urlType": "msg",
        "path": "path",
        "pathType": "msg",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "7bcb301e0aa4eb8e"
            ]
        ]
    },
    {
        "id": "72c2138e3aa78429",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1610,
        "y": 220,
        "wires": [
            [
                "a943aada5185932a"
            ]
        ]
    },
    {
        "id": "626fb43bcf5c1327",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 240,
        "wires": []
    },
    {
        "id": "a943aada5185932a",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 26",
        "func": "if(msg.statusCode === 200){\n    msg.payload ={ \n        translate: msg.payload.text,\n        transcript: msg.transcript}\n    }\n    else{\n        msg.payload = msg.payload\n        msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 240,
        "wires": [
            [
                "626fb43bcf5c1327"
            ]
        ]
    },
    {
        "id": "daf1a636ad3a0004",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 27",
        "func": "\nif(msg.old.translate === 'true'){\nmsg.transcript = msg.payload;\nmsg.url = `https://api.openai.com/v1/audio/translations`;\nmsg.method = \"POST\";\n\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Authorization\": msg.token,\n    \"Connection\": \"Keep-Alive\",\n    \"Transfer-Encoding\": \"chunked\"\n}\n\nmsg.payload = {\n    'model': 'whisper-1',\n    \"response-format\": \"text\",\n    'temperature': 0.2,\n        \"file\": {\n        \"value\": msg.buffer,\n        \"options\": {\n            \"filename\": msg.filename\n        }\n    }, \n}\nreturn [msg,null]\n}\nelse{\nreturn [null, msg]\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 180,
        "wires": [
            [
                "72c2138e3aa78429"
            ],
            [
                "e3314196fa80a884"
            ]
        ]
    },
    {
        "id": "9adcb51f7dcf845b",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 220,
        "wires": []
    },
    {
        "id": "3f965dfdd2b0d47b",
        "type": "http request",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 280,
        "wires": [
            [
                "388add7d8b3b0040"
            ]
        ]
    },
    {
        "id": "69579e696768a6c1",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1310,
        "y": 300,
        "wires": []
    },
    {
        "id": "388add7d8b3b0040",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 28",
        "func": "if(msg.statusCode === 200){\n    msg.payload ={ \n        translate: msg.payload.text,\n        transcript: msg.transcript\n        }\n    }\n    else{\n    msg.payload = {\n        translate: msg.payload.error.message,\n        transcript: msg.transcript\n    }\n        msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 300,
        "wires": [
            [
                "69579e696768a6c1"
            ]
        ]
    },
    {
        "id": "2cc5fd124313ecfe",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 29",
        "func": "\nif (msg.oldpayload.translate === 'true'){\nmsg.transcript = msg.payload;\nmsg.url = `https://api.openai.com/v1/audio/translations`;\nmsg.method = \"POST\";\n\nmsg.headers = {\n    \"Content-Type\": \"multipart/form-data\",\n    \"Authorization\": msg.token,\n    \"Connection\": \"Keep-Alive\",\n    \"Transfer-Encoding\": \"chunked\"\n}\n\nmsg.payload = {\n    'model': 'whisper-1',\n    \"response-format\": \"text\",\n    'temperature': 0.2,\n        \"file\": {\n        \"value\": msg.buffer,\n        \"options\": {\n            \"filename\": msg.filename\n        }\n    }, \n}\nreturn [msg,null]\n}\nelse{\n    msg.payload.transcript = msg.payload\nreturn [null, msg]\n}\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 240,
        "wires": [
            [
                "3f965dfdd2b0d47b"
            ],
            [
                "9adcb51f7dcf845b"
            ]
        ]
    },
    {
        "id": "fa9c0e8472b0b04e",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 30",
        "func": "if(msg.statusCode === 200){\n    msg.payload = msg.payload.choices[0].text\n    }\n    else{\n    msg.payload = msg.payload.error.message\n        msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 320,
        "wires": [
            [
                "81868afb10ed64c5"
            ]
        ]
    },
    {
        "id": "62b17cec65e9d571",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 31",
        "func": "if(msg.statusCode === 200){\n    msg.payload = msg.payload.text\n    }\n    else{\n     msg.payload = msg.payload.error.message\n     msg.statusCode = 200\n    }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 120,
        "wires": [
            [
                "daf1a636ad3a0004"
            ]
        ]
    },
    {
        "id": "6ed4068a0010753f",
        "type": "template",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": ".gridWrap{\n    right: 0px !important;\n    top: 0px !important;\n    height: 100vh !important;\n    width: 100vw;\n    padding: 4px 0px !important;\n}\n\n.selectedTab {\nbox-shadow: rgb(235, 239, 242) -1px 0px 0px inset, rgb(235, 239, 242) 1px 0px 0px inset, #0a5dc2 0px 4px 0px inset !important;\n\n}",
        "output": "str",
        "x": 320,
        "y": 460,
        "wires": [
            [
                "29268da6a7d287fe"
            ]
        ]
    },
    {
        "id": "e9a3f76c0ab11819",
        "type": "http in",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "url": "/css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 460,
        "wires": [
            [
                "6ed4068a0010753f"
            ]
        ]
    },
    {
        "id": "29268da6a7d287fe",
        "type": "http response",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/css"
        },
        "x": 550,
        "y": 460,
        "wires": []
    },
    {
        "id": "814c86a1f676ae09",
        "type": "inject",
        "z": "0982ff679a3f7ceb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "b6521e8507880da4"
            ]
        ]
    },
    {
        "id": "b6521e8507880da4",
        "type": "function",
        "z": "0982ff679a3f7ceb",
        "name": "function 32",
        "func": "global.set('token', \"\")\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 60,
        "wires": [
            []
        ]
    }
]